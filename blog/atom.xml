<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://github.com/warp/blog</id>
    <title>Warp is awesome 🌠 Blog</title>
    <updated>2022-06-24T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://github.com/warp/blog"/>
    <subtitle>Warp is awesome 🌠 Blog</subtitle>
    <icon>https://github.com/warp/img/warp.svg</icon>
    <entry>
        <title type="html"><![CDATA[Running Juno from your Raspberry Pi]]></title>
        <id>junopi</id>
        <link href="https://github.com/warp/blog/junopi"/>
        <updated>2022-06-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Juno is a node which aims to help decentralise StarkNet, a prominent Ethereum Layer 2.]]></summary>
        <content type="html"><![CDATA[<p>Juno is a node which aims to help <strong>decentralise StarkNet, a prominent Ethereum Layer 2</strong>.</p><p>For its mission to be achieved, it needs people to <strong>start running their own node</strong>.</p><p>To become one of the early few making StarkNet better, read below.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="disclaimer">Disclaimer<a class="hash-link" href="#disclaimer" title="Direct link to heading">​</a></h3><p>In this short article we lay out the steps to get a Raspberry PI with a working <a href="https://www.raspbian.org/" target="_blank" rel="noopener noreferrer">Raspbian</a>
installation to run the Juno StarkNet node. We assume that you have access as a root user to the Pi.</p><p>At time of writing, <strong>both StarkNet and Juno are still in an early release</strong>. Expect this guide and required steps to change often!</p><p>For the latest on the project, check out our <a href="https://github.com/NethermindEth/juno" target="_blank" rel="noopener noreferrer">Github repo</a>, and refer to our
<a href="https://gojuno.xyz/" target="_blank" rel="noopener noreferrer">Documentation</a>.</p><p>The disk space issues are currently work in progress, and will be addressed in an upcoming new release.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="main-features">Main Features<a class="hash-link" href="#main-features" title="Direct link to heading">​</a></h2><ul><li><a href="https://gojuno.xyz/docs/features/sync" target="_blank" rel="noopener noreferrer">Get and Sync state from Layer 1</a> (Ethereum).</li><li><a href="https://gojuno.xyz/docs/features/sync" target="_blank" rel="noopener noreferrer">Get and Sync state from API</a> (Feeder Gateway).</li><li>Store <a href="https://gojuno.xyz/docs/features/sync" target="_blank" rel="noopener noreferrer">StarkNet State</a> locally.</li><li>Store StarkNet Transactions.</li><li>Store StarkNet Blocks.</li><li>Store the ABI of StarkNet contracts.</li><li>Ethereum-like <a href="https://gojuno.xyz/docs/features/rpc" target="_blank" rel="noopener noreferrer">Json RPC Server</a> following
<a href="https://github.com/starkware-libs/starknet-specs/blob/master/api/starknet_api_openrpc.json" target="_blank" rel="noopener noreferrer">this spec</a>.
in the same way you would call the feeder gateway, where using the same params will return the same response.</li><li><a href="https://gojuno.xyz/docs/features/cli" target="_blank" rel="noopener noreferrer">CLI</a> for general StarkNet tools.</li><li><a href="https://gojuno.xyz/docs/features/metrics" target="_blank" rel="noopener noreferrer">Metrics</a> using Prometheus.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="installation">Installation<a class="hash-link" href="#installation" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="specification-">Specification 🤖<a class="hash-link" href="#specification-" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">- Raspberry 4 (model B) - 4GB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- MicroSD card - 16GB+ (Class 10 Minimum)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- Power supply</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- Internet connection (ethernet preferrable)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- USB keyboard, a monitor, and an HDMI cable to interact with the computer or .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- [Install Raspbian](https://www.raspbian.org/)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- [Install Golang (see below)](https://golang.org/doc/install)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- [Have make installed](https://golang.org/doc/install#make)</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="get-golang-">Get Golang 🦫<a class="hash-link" href="#get-golang-" title="Direct link to heading">​</a></h3><p>Ensure that your Raspberry Pi is up-to-date.</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">apt</span><span class="token plain"> update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">apt</span><span class="token plain"> full-upgrade</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Check the <a href="https://go.dev/dl/" target="_blank" rel="noopener noreferrer">Golang download website</a> for the latest armv6l version. At time of writing, we would download go 1.18.3.</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">wget</span><span class="token plain"> https://go.dev/dl/go1.18.3.linux-armv6l.tar.gz -O go.tar.gz</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Now extract the tarball into your /usr/local/ directory (root access required).</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">tar</span><span class="token plain"> -C /usr/local -xzf go.tar.gz</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Add the following to your shell config (usually ~/.bashrc).
If you have no preferred text editor, you can use <code>nano ~/.bashrc</code> to edit your bash config from the terminal.</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># ~/.bashrc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">GOPATH</span><span class="token operator" style="color:#393A34">=</span><span class="token environment constant" style="color:#36acaa">$HOME</span><span class="token plain">/go</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable environment constant" style="color:#36acaa">PATH</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/usr/local/go/bin:</span><span class="token environment constant" style="color:#36acaa">$PATH</span><span class="token builtin class-name">:</span><span class="token variable" style="color:#36acaa">$GOPATH</span><span class="token plain">/bin</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Afterwards press <code>CTRL</code> + <code>X</code> and then <code>Y</code> to exit the nano text editor and save the file.</p><p>Finally, as your <code>.bashrc</code> is only initialised when the shell is started, you need to source the new <code>~/.bashrc</code> to update available commands.</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">source</span><span class="token plain"> ~/.bashrc</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>You should now have a working Golang installation in your Raspberry Pi. You can check it typing:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">go version</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="install-juno-️">Install Juno ⚙️<a class="hash-link" href="#install-juno-️" title="Direct link to heading">​</a></h3><p>To install <code>juno</code>, the StarkNet node:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">go </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> github.com/NethermindEth/juno/cmd/juno@latest</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>To install <code>juno-cli</code>, the separate tool for interacting with StarkNet:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">go </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> github.com/NethermindEth/juno/cmd/juno-cli@latest</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>For details about the configuration you can look at
the <a href="https://gojuno.xyz/docs/running/config" target="_blank" rel="noopener noreferrer">config file description</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="configuring-juno">Configuring juno<a class="hash-link" href="#configuring-juno" title="Direct link to heading">​</a></h2><p>Usually, when you first run Juno, a <a href="https://gojuno.xyz/docs/running/config" target="_blank" rel="noopener noreferrer">config file</a> will be created in
<code>/home/pi/.config/juno/juno.yaml</code> in your home directory.</p><p>When syncing the StarkNet state from a Raspberry Pi, we expect you to have at least 64GB. In case of you don't have
this space, you can run it using an SSD, ensuring that the property <code>db_path</code> points to the external SSD:</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># juno.yaml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">db_path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /path/to/ssd/database/here</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div>]]></content>
        <author>
            <name>Diego de Pablos</name>
            <uri>https://github.com/D-DePablos</uri>
        </author>
        <author>
            <name>Marcos Maceo</name>
            <uri>https://github.com/stdevMac</uri>
        </author>
        <category label="juno" term="juno"/>
        <category label="rpi" term="rpi"/>
        <category label="raspberry" term="raspberry"/>
        <category label="pi" term="pi"/>
        <category label="deploy" term="deploy"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Welcome]]></title>
        <id>welcome</id>
        <link href="https://github.com/warp/blog/welcome"/>
        <updated>2022-06-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Juno is a Go implementation of a StarkNet full node client made with ❤️ by Nethermind.]]></summary>
        <content type="html"><![CDATA[<p>Juno is a Go implementation of a StarkNet full node client made with ❤️ by Nethermind.</p><p>We are working hard for our first release, until then, what you can do?</p><p>Let's discover <strong>Juno in less than 5 min</strong>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="what-you-will-need">What You Will Need<a class="hash-link" href="#what-you-will-need" title="Direct link to heading">​</a></h2><ul><li><a href="https://go.dev/doc/install" target="_blank" rel="noopener noreferrer">Golang</a> version 1.18 for build and run the project.</li><li><em>For Linux</em>: You will need to install <code>clang</code>:</li></ul><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">apt</span><span class="token plain"> -y </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> clang</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="installing">Installing<a class="hash-link" href="#installing" title="Direct link to heading">​</a></h3><p>After cloning the project,</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain"> clone https://github.com/NethermindEth/juno</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>You can install all the dependencies running the following command inside the project folder:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ go get ./</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="running-juno">Running Juno<a class="hash-link" href="#running-juno" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="compiling-directly">Compiling Directly<a class="hash-link" href="#compiling-directly" title="Direct link to heading">​</a></h3><p>Compile Juno:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">make</span><span class="token plain"> compile</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>After compilation, you will have 2 commands inside the <code>build</code> folder:</p><ul><li>juno<ul><li><code>juno</code> is the command that initializes the node.</li></ul></li><li>juno-cli<ul><li><code>juno-cli</code> is the command that direct interactions with the StarkNet ecosystem.</li></ul></li></ul><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">make</span><span class="token plain"> run</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>For more details on the configuration, check the <a href="https://gojuno.xyz/docs/running/config" target="_blank" rel="noopener noreferrer">config description</a>.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="using-docker">Using Docker<a class="hash-link" href="#using-docker" title="Direct link to heading">​</a></h3><p>If you prefer to use docker, you can follow <a href="https://gojuno.xyz/docs/running/docker" target="_blank" rel="noopener noreferrer">this</a> guide.</p>]]></content>
        <author>
            <name>Marcos Maceo</name>
            <uri>https://github.com/stdevMac</uri>
        </author>
        <category label="hello" term="hello"/>
        <category label="juno" term="juno"/>
    </entry>
</feed>